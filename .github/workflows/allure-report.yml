name: Run API Tests with Allure
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 21 and Maven
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      - name: Run tests and generate Allure results
        run: mvn clean test
      - name: Upload Allure results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
  deploy-allure-report:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results
      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -xzf allure-2.27.0.tgz
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/local/bin/allure
      - name: Generate Allure report
        run: |
          allure generate allure-results --clean -o allure-report
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          publish_branch: gh-pages
  notify-slack:
    needs: [ test, deploy-allure-report ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Slack notification
        run: |
          STATUS="${{ needs.test.result }}"
          if [ "$STATUS" = "success" ]; then
            EMOJI=":white_check_mark:"
          else
            EMOJI=":x:"
          fi
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"${EMOJI} CI/CD finished with status: *$STATUS*\nRepo: $GITHUB_REPOSITORY\nCommit: <https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA%7C$GITHUB_SHA>\"
          }" ${{ secrets.NEWSLETTER_CHANNEL }}